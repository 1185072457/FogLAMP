#!/bin/bash

set -e

# This variables must be set here
is_quiet=0  # When 0, it requires input and prints messagess

# First, check some of the arguments passed to the script
for argument  in "$@"
do
  lower_arg=`echo ${argument} | awk '{print tolower( $0 )}'`
  case "${lower_arg}" in
    silent)
      is_quiet=1
      ;;
    *)
      ;;
  esac
done

FOGLAMP_STORAGEDIR="/usr/local/pgsql"
FOGLAMP_DIR="${HOME}/FogLAMP"
USAGE="Usage: `basename ${0}` {help|start|stop|init|restart|reload|kill|status|test|install} [silent]"

# Set the LD_LIBRARY_PATH variable, but only for Ubuntu Core on ARM
if [ `uname -m` == "armv7l" ]; then
  LD_LIBRARY_PATH=/usr/local/pgsql/lib:/usr/local/pgsql/lib/arm-linux-gnueabihf
  export LD_LIBRARY_PATH
fi


##
## Start the FogLAMP Storage Layer
##
storage_start() {

  if [ ${is_quiet} -eq 0 ]; then
    echo -n "Starting the FogLAMP Storage Layer..."
  fi

  if [ `${FOGLAMP_STORAGEDIR}/bin/pg_ctl -D ${FOGLAMP_STORAGEDIR}/data status | grep -c "server is running"` -gt 0 ]; then

    if [ ${is_quiet} -eq 0 ]; then
      echo " It looks like the FogLAMP Storage Layer is already running."
    fi 

  else

    ${FOGLAMP_STORAGEDIR}/bin/pg_ctl -w -D ${FOGLAMP_STORAGEDIR}/data start > /dev/null

    cycle=30
    while [ "$cycle" -gt 0 ]; do
      if [ `${FOGLAMP_STORAGEDIR}/bin/pg_ctl -D ${FOGLAMP_STORAGEDIR}/data status | grep -c "server is running"` -gt 0 ]; then
        if [ ${is_quiet} -eq 0 ]; then
          echo " Done."
        fi
        cycle=0
      else
        if [ "$cycle" -eq 1 ]; then
          echo " FogLAMP cannot be initialized, the Storage Layer cannot start."
          exit 3
        else
          echo -n "."
          cycle=$((cycle -1))
          sleep 1
        fi
      fi
    done

  fi
   
}



##
## Stop the FogLAMP Storage Layer
##
storage_stop() {

  if [ ${is_quiet} -eq 0 ]; then
    echo -n "Stopping the FogLAMP Storage Layer..."
  fi

  ${FOGLAMP_STORAGEDIR}/bin/pg_ctl -w -D ${FOGLAMP_STORAGEDIR}/data stop > /dev/null

  cycle=30
  while [ "$cycle" -gt 0 ]; do
    if [ `${FOGLAMP_STORAGEDIR}/bin/pg_ctl -D ${FOGLAMP_STORAGEDIR}/data status | grep -c "no server running"` -gt 0 ]; then
      if [ ${is_quiet} -eq 0 ]; then
        echo " Done."
      fi
      cycle=0
    else
      if [ "$cycle" -eq 1 ]; then
        echo " The FogLAMP Storage Layer cannot be stopped. Try with the command 'foglamp kill'."
        exit 3
      else
        echo -n "."
        cycle=$((cycle -1))
        sleep 1
      fi
    fi
  done
   
}


##
## Start FogLAMP
##
foglamp_start() {

  storage_start

  cd ${FOGLAMP_DIR}/src/python
  source ./build.sh -a
  ${FOGLAMP_DIR}/src/python/venv/foglamp-core/bin/foglamp start

}


##
## Initialize FogLAMP
##
foglamp_init() {

  storage_start
  ${FOGLAMP_STORAGEDIR}/bin/psql -U foglamp -d postgres -f ${FOGLAMP_DIR}/src/sql/foglamp_ddl.sql > /dev/null
  ${FOGLAMP_STORAGEDIR}/bin/psql -U foglamp -d foglamp -f ${FOGLAMP_DIR}/src/sql/foglamp_init_data.sql > /dev/null
  storage_stop
  
}


##
## Check the status of FogLAMP
##
foglamp_status() {

  cd ${FOGLAMP_DIR}/src/python
  source ./build.sh -a
  ${FOGLAMP_DIR}/src/python/venv/foglamp-core/bin/foglamp status

}


##
## Stop FogLAMP
##
foglamp_stop() {

  cd ${FOGLAMP_DIR}/src/python
  source ./build.sh -a
  ${FOGLAMP_DIR}/src/python/venv/foglamp-core/bin/foglamp stop

  storage_stop
  
}


##
## Install a refreshed version of FogLAMP
##
foglamp_install() {

  echo "This script will remove data and code of the previous versions of FogLAMP."
  echo -n "Enter YES if you want to continue: "
  read continue_installation

  if [ "$continue_installation" != 'YES' ]; then
    echo "Goodbye."
    exit 0
  fi

  # Copy executables in the bin directory
  echo -n "Copying scripts into ~/bin..."
  cp -R ${FOGLAMP_DIR}/extras/bin ${HOME}/.
  echo "Done."

  # Retrieve and install PostgreSQL
  cd ${HOME}
  case `uname -m` in

    x86_64)
      pg_tar="foglamp_pgsql-9.6.3_x86_64-Ubuntu-Core-16.04.4.tgz"
      ;;

    armv7l)
      pg_tar="foglamp_pgsql-9.6.3_arm64-Ubuntu-Core-16.04.2.tgz"
      ;;

    *)
      echo "This architecture is not supported by FogLAMP."
      exit 1
      ;;

  esac

  echo
  echo "Retrieving the FogLAMP Storage Layer..."
  wget "https://s3.amazonaws.com/foglamp/${pg_tar}" -O "${pg_tar}"

  echo
  echo "Installing the FogLAMP Storage Layer..."
  sudo rm -rf /usr/local/pgsql
  sudo tar xzvf "${pg_tar}" -C /
  my_user=${USER}
  sudo chown -R ${my_user}:${my_user} /usr/local/pgsql

  # Build the environment
  echo
  echo "Setting the running environment..."
  cd ${HOME}/FogLAMP/src/python
  source build.sh -i
  source build.sh -a

  echo "Installation Completed."

}


# If FogLAMP is running on Ubuntu core, it must run in classic mode
if [ `snap list | grep -c 'core'` -gt 0 ]; then
  if [ "$debian_chroot" != 'classic' ]; then
    echo "FogLAMP must run in classic mode. Type \"sudo classic\" first and run this command again."
    exit 1
  fi
fi


case "$1" in
  help)
    foglamp_help
    ;;
  start)
    foglamp_start
    ;;
  init)
    foglamp_init
    ;;
  install)
    foglamp_install
    ;;
  status)
    foglamp_status
    ;;
#  test)
#    foglamp_test test
#    ;;
  stop)
    foglamp_stop
    ;;
#  kill)
#    foglamp_stop kill
#    ;;
  restart|reload|condrestart)
    foglamp_stop
    sleep 5
    foglamp_start
    ;;
  *)
    echo "${USAGE}"
    exit 1
esac

exit $?
